"use strict";
const units = ['bytes', 'kb', 'mb', 'gb', 'tb', 'pb', 'eb', 'zb', 'yb'];

var drift = {
    docBody: $('body'),
    customStyle: null,
    addClass: function (eleRef, eleID, className) {
        jQuery(eleRef).parents(eleID).addClass(className);
    },
    removeClass: function (eleRef, eleID, className) {
        jQuery(eleRef).parents(eleID).removeClass(className);
    },
    sidebar: {
        window: $(window),
        docBody: $('body'),
        drawerRef: jQuery('.dt-sidebar'),
        sidebarToggleHandle: $('[data-toggle=main-sidebar]'),
        foldedHandle: $('[data-handle=folded]'),
        overlay: null,
        enabledFixedSidebar: false,
        enabledFoldedSidebar: false,
        enabledDrawer: false,
        init: function () {
            var sidebar = this;

            if (this.drawerRef.hasClass('dt-drawer')) {
                this.enabledDrawer = true;
            }

            var bodyWidth = sidebar.docBody.innerWidth();
            if (bodyWidth < 992) {
                sidebar.initDrawer();
            } else {
                sidebar.destroy();
            }

            sidebar.window.resize(function () {
                bodyWidth = sidebar.docBody.innerWidth();
                if (bodyWidth < 992) {
                    sidebar.initDrawer();
                } else {
                    sidebar.destroy();
                }
            });

            this.sidebarToggleHandle.on('click', function () {
                sidebar.toggleFolded();
            });
        },
        initDrawer: function () {
            if (this.docBody.hasClass('dt-sidebar--fixed')) {
                this.enabledFixedSidebar = true;
            }

            if (this.docBody.hasClass('dt-sidebar--folded')) {
                this.enabledFoldedSidebar = true;
            }

            this.docBody.removeClass('dt-sidebar--fixed');
            this.docBody.removeClass('dt-sidebar--folded');

            this.drawerRef.addClass('dt-drawer position-left');
            $(document).trigger('sidebar-toggle-fixed');
        },
        destroy: function () {
            if (!this.enabledDrawer) {
                this.drawerRef.removeClass('dt-drawer position-left');
            }

            if (this.enabledFixedSidebar) {
                this.docBody.addClass('dt-sidebar--fixed');
                $(document).trigger('sidebar-toggle-fixed');
            }

            if (this.enabledFoldedSidebar) {
                this.docBody.addClass('dt-sidebar--folded');
            }
        },
        toggleFolded: function () {
            if (!this.drawerRef.hasClass('dt-drawer')) {
                if (this.docBody.hasClass('dt-sidebar--folded')) {
                    this.sidebarUnfolded();
                    activeLayoutHandle('default');
                } else {
                    this.sidebarFolded();
                    activeLayoutHandle('folded');
                }
            }
        },
        sidebarFolded: function () {
            this.docBody.addClass('dt-sidebar--folded');
            $(document).trigger('sidebar-folded');
        },
        sidebarUnfolded: function () {
            this.docBody.removeClass('dt-sidebar--folded');
            $(document).trigger('sidebar-unfolded');
        },
        toggle: function () {
            if (this.drawerRef.hasClass('open')) {
                this.close();
            } else {
                this.open()
            }
        },
        open: function () {
            this.drawerRef.addClass('open');
            this.insertOverlay();
            this.sidebarToggleHandle.addClass('active');
        },
        close: function () {
            this.drawerRef.removeClass('open');
            this.overlay.remove();
            this.sidebarToggleHandle.removeClass('active');
        },
        insertOverlay: function () {
            this.overlay = document.createElement('div');
            this.overlay.className = 'dt-backdrop';
            this.drawerRef.after(this.overlay);

            var drawer = this;
            var overlayContainer = $(this.overlay);
            overlayContainer.on('click', function (event) {
                event.stopPropagation();
                drawer.toggle();
            });
        }
    },
    hoverCard: {
        docBody: $('body'),
        hoverHndle: $('[data-hover=thumb-card]'),
        handleRef: null,
        thumbCard: null,
        init: function () {
            var $this = this;
            this.createHoverCard();

            this.hoverHndle.hover(function () {
                $this.handleRef = $(this);
                $this.showThumb();
            }, function () {
                $this.hideThumb();
            });
        },
        showThumb: function () {
            var bodyWidth = this.docBody.outerWidth(true);

            if (bodyWidth > 767) {
                var $this = this;
                var offset = this.handleRef.offset();
                var handleWidth = this.handleRef.outerWidth(true);
                var name = (this.handleRef.data('name')) ? this.handleRef.data('name') : '';

                var innerHtml = '<span class="user-bg-card__info"><span class="dt-avatar-name text-center">' + name + '</span></span>';

                $this.thumbCard.html(innerHtml);

                if (($this.handleRef.data('thumb'))) {
                    $this.thumbCard.css({
                        backgroundImage: 'url(' + $this.handleRef.data('thumb') + ')',
                        backgroundPosition: 'center center',
                        backgroundSize: 'cover'
                    });
                } else {
                    $this.thumbCard.css({background: 'transparent'});
                }

                $this.thumbCard.css({
                    left: (offset.left - ((handleWidth + 67.5) / 2)),
                    top: (offset.top - 100),
                    width: 135,
                    height: 90,
                    zIndex: 2
                });
                $this.thumbCard.fadeIn();
            }
        },
        hideThumb: function () {
            this.thumbCard.fadeOut();
        },
        createHoverCard: function () {
            var tc = document.createElement('div');
            tc.className = 'card user-bg-card position-absolute bg-primary';
            tc.style.display = 'none';
            this.docBody.append(tc);
            this.thumbCard = $(tc);
        }
    },
    customizer: {
        toggleHandle: $('[data-toggle=customizer]'),
        containerPanel: $('.dt-customizer'),
        overlay: null,
        init: function () {
            var $this = this;

            $this.toggleHandle.on('click', function () {
                $this.toggle();
            });
        },
        toggle: function () {
            if (this.containerPanel.hasClass('open')) {
                this.close();
            } else {
                this.open()
            }
        },
        open: function () {
            this.containerPanel.addClass('open');
            this.insertOverlay();
        },
        close: function () {
            this.containerPanel.removeClass('open');
            this.overlay.remove();
        },
        insertOverlay: function () {
            this.overlay = document.createElement('div');
            this.overlay.className = 'dt-backdrop';
            this.containerPanel.after(this.overlay);

            var $this = this;
            var overlayContainer = $(this.overlay);
            overlayContainer.on('click', function (event) {
                event.stopPropagation();
                $this.toggle();
            });
        }
    },
    quickDrawer: {
        toggleHandle: $('[data-toggle=quick-drawer]'),
        containerPanel: $('.dt-quick-drawer'),
        overlay: null,
        init: function () {
            var $this = this;

            $this.toggleHandle.on('click', function () {
                $this.toggle();
            });
        },
        toggle: function () {
            if (this.containerPanel.hasClass('open')) {
                this.close();
            } else {
                this.open()
            }
        },
        open: function () {
            this.containerPanel.addClass('open');
            this.insertOverlay();
        },
        close: function () {
            this.containerPanel.removeClass('open');
            this.overlay.remove();
        },
        insertOverlay: function () {
            this.overlay = document.createElement('div');
            this.overlay.className = 'dt-backdrop';
            this.containerPanel.after(this.overlay);

            var $this = this;
            var overlayContainer = $(this.overlay);
            overlayContainer.on('click', function (event) {
                event.stopPropagation();
                $this.toggle();
            });
        }
    },
    init: function () {
        this.sidebar.init();
        this.hoverCard.init();
        this.customizer.init();
        this.quickDrawer.init();
        this.initCustomStyle();
    },
    updateStyle: function (style) {
        this.customStyle.innerHTML = style;
    },
    initCustomStyle: function () {
        this.customStyle = document.createElement('style');
        this.docBody.prepend(this.customStyle);
    }
};

var dtDrawer = {
    container: $('#dt-notification-drawer'),
    toggleHandle: $('[data-toggle=drawer]'),
    switchHandle: $('[data-switch=drawer]'),
    activeHandle: null,
    activeSwitch: null,
    activeChildContainer: null,
    loader: null,
    dismisHandle: $('[data-dismiss=drawer]'),
    overlay: null,
    init: function () {
        var mdrawer = this;
        this.toggleHandle.on('click', function () {
            mdrawer.activeHandle = $(this);
            mdrawer.toggle();
        });

        this.switchHandle.on('click', function () {
            mdrawer.activeSwitch = $(this);
            mdrawer.swtichView();
        });

        this.createLoader();
    },
    swtichView: function () {
        if (this.activeChildContainer) {
            this.activeChildContainer.removeClass('show');
        }

        this.toggleLoader();
        var mdrawer = this;

        setTimeout(function () {
            mdrawer.deactiveSwitches();
            mdrawer.toggleLoader('hide');

            if (mdrawer.activeSwitch) {
                mdrawer.activeChildContainer = $(mdrawer.activeSwitch.data('target'));
                mdrawer.activeSwitch.parent().addClass('active');
                mdrawer.activeChildContainer.addClass('show')
            }
        }, 500);
    },
    toggle: function () {
        if (this.container.hasClass('open')) {
            this.close();
        } else {
            this.open()
        }
    },
    open: function () {
        this.toggleLoader();
        this.container.addClass('open');
        this.insertOverlay();
        this.toggleActiveHandle();

        var mdrawer = this;
        this.dismisHandle.on('click', function () {
            mdrawer.close();
        });
    },
    close: function () {
        this.container.removeClass('open');
        this.toggleActiveHandle();
        this.overlay.remove();
    },
    insertOverlay: function () {
        this.overlay = document.createElement('div');
        this.overlay.className = 'dt-backdrop';
        this.container.after(this.overlay);

        var mdrawer = this;
        var overlayContainer = $(this.overlay);
        overlayContainer.on('click', function (event) {
            event.stopPropagation();
            mdrawer.close();
        });
    },
    deactiveToggles: function () {
        this.toggleHandle.removeClass('active');
    },
    deactiveSwitches: function () {
        this.switchHandle.parent().removeClass('active');
    },
    activeSameTargetSwitches: function () {
        if (this.activeHandle) {
            this.deactiveSwitches();
            var target = this.activeHandle.data('target');
            this.switchHandle.each(function () {
                if ($(this).data('target') == target) {
                    $(this).parent().addClass('active');
                }
            });
        }
    },
    toggleActiveHandle: function () {
        if (this.activeChildContainer) {
            this.activeChildContainer.removeClass('show');
        }

        if (this.activeHandle) {
            this.activeChildContainer = $(this.activeHandle.data('target'));
            var mdrawer = this;

            setTimeout(function () {
                mdrawer.toggleLoader('hide');

                if (mdrawer.activeHandle && mdrawer.activeHandle.hasClass('active')) {
                    mdrawer.activeChildContainer.removeClass('show');
                    mdrawer.activeHandle.removeClass('active');
                    mdrawer.activeHandle = null;
                } else if (mdrawer.activeHandle) {
                    mdrawer.activeChildContainer.addClass('show');
                    mdrawer.activeHandle.addClass('active');
                    mdrawer.activeSameTargetSwitches();
                }
            }, 500);
        }
    },
    createLoader: function () {
        var svgHtml = '<svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"></circle></svg>';
        this.loader = document.createElement('div');
        this.loader.className = 'dt-loader';
        this.loader.innerHTML = svgHtml;
        this.container.find('.dt-action-content').prepend(this.loader);
    },
    toggleLoader: function (display) {
        if (this.loader) {
            if (display) {
                if (display == 'show') {
                    $(this.loader).addClass('active');
                } else {
                    $(this.loader).removeClass('active');
                }
            } else {
                $(this.loader).toggleClass('active');
            }
        }
    }
};

/**
 * Set new Cookie
 * @param {type} name
 * @param {type} value
 * @param {type} days
 * @returns {undefined}
 */
function setCookie(name, value, days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}

/**
 * Get Cookie value
 * @param {type} name
 * @returns {unresolved}
 */
function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ')
            c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0)
            return c.substring(nameEQ.length, c.length);
    }
    return null;
}

function notifyUser(title) {
    if (title === '') {
        title = 'Settings saved successfully.';
    }

    const toast = swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 3000
    });

    toast({type: 'success', title: title});
}



/*
 * Active customizer layout option
 */
function activeLayoutHandle(layout) {
    var $layoutContainer = jQuery('#sidebar-layout');
    $layoutContainer.find('.choose-option').removeClass('active');

    if (layout === 'folded') {
        $layoutContainer.find('[data-value=folded]').parent().addClass('active');
    } else if (layout === 'drawer') {
        $layoutContainer.find('[data-value=drawer]').parent().addClass('active');
    } else if (layout === 'default') {
        $layoutContainer.find('[data-value=default]').parent().addClass('active');
    }
}


var $themeStylesheet;
var $dtTheme = localStorage.getItem('dt-theme');
var $dtLayout = localStorage.getItem('dt-layout');
var $dtStyle = localStorage.getItem('dt-style');
var $currentTheme = ($dtTheme) ? $dtTheme : 'semidark';
var $currentLayout = ($dtLayout) ? $dtLayout : 'full-width';
var $currentThemeStyle = ($dtStyle) ? $dtStyle : 'style-1';

// (function ($) {
$(document).ready(function () {
    $themeStylesheet = document.createElement('link');
    $themeStylesheet.id = 'theme-stylesheet';
    $themeStylesheet.rel = 'stylesheet';
    $themeStylesheet.href = '';
    $('head').append($themeStylesheet);

    // go to location
    $('[data-location]').on('click', function (event) {
        event.preventDefault();
        window.location = $(this).data('location');
    });
});
// (jQuery);

// (function ($) {
$(document).ready(function () {
    // var $body = $('body');
    //var $loader = $('.dt-loader-container');
    // var $root = $('.dt-root');

    if ($('.dt-loader-container').length) {
        $('.dt-loader-container').delay(300).fadeOut('noraml', function () {
            $('body').css('overflow', 'auto');
            $('.dt-root').css('opacity', '1');
            $(document).trigger('loader-hide');
        });
    } else {
        $(document).trigger('loader-hide');
    }

    if ($('#main-sidebar').length) {
        var leftSideBarScroll = new PerfectScrollbar('#main-sidebar', {
            wheelPropagation: !$('body').hasClass('dt-sidebar--fixed')
        });

        $(document).on('sidebar-toggle-fixed', function () {
            leftSideBarScroll.settings.wheelPropagation = !$('body').hasClass('dt-sidebar--fixed');
            leftSideBarScroll.update();
        });
    }

    $('.ps-custom-scrollbar').each(function () {
        new PerfectScrollbar(this, {
            wheelPropagation: true
        });
    });

    if ($.isFunction($.fn.masonry)) {
        var $grid = $('.dt-masonry');
        $grid.masonry({
            // options
            itemSelector: '.dt-masonry__item',
            percentPosition: true
        });

        $(document).on('layout-changed', function () {
            setTimeout(function () {
                $grid.masonry('reloadItems');
                $grid.masonry({
                    // options
                    itemSelector: '.dt-masonry__item',
                    percentPosition: true
                });
            }, 500);
        });
    }

    var current_path = window.location.href.split('/').pop();
    var $current_menu = $('a[href="' + current_path + '"]');
    $current_menu.addClass('active').parents('.nav-item').find('> .nav-link').addClass('active');

    if ($current_menu.length > 0) {
        $('.dt-side-nav__item').removeClass('open');

        if ($current_menu.parents().hasClass('dt-side-nav__item')) {
            $current_menu.parents('.dt-side-nav__item').addClass('open selected');
        } else {
            $current_menu.parent().addClass('active').parents('.dt-side-nav__item').addClass('open selected');
        }
    }

    var slideDuration = 150;
    $("ul.dt-side-nav > li.dt-side-nav__item").on("click", function () {
        //var menuLi = this;
        $("ul.dt-side-nav > li.dt-side-nav__item").not(this).removeClass("open");
        $("ul.dt-side-nav > li.dt-side-nav__item ul").not($("ul", this)).slideUp(slideDuration);
        $(" > ul", this).slideToggle(slideDuration, function () {
            $(this).toggleClass("open");
            console.log('has not open');
        });
    });

    $("ul.dt-side-nav__sub-menu li").on('click', function (e) {
        // var $current_sm_li = $(this);
        // var $current_sm_li_parent = $(this).parent();

        if ($(this).parent().parent().hasClass("active")) {
            $("li ul", $(this).parent()).not($("ul", $(this))).slideUp(slideDuration, function () {
                $("li", $(this).parent()).not($(this)).removeClass("active");
            });

        } else {
            $("ul.dt-side-nav__sub-menu li ul").not($(" ul", $(this))).slideUp(slideDuration, function () {
                //$("ul.sub-menu li").not($current_sm_li).removeClass("active");console.log('has not parent');
            });
        }

        $(" > ul", $(this)).slideToggle(slideDuration, function () {
            $($(this)).toggleClass("active");
        });

        e.stopPropagation();
    });

    // init Drawer
    drift.init();
    dtDrawer.init();

    $('.dt-brand__tool, .dt-drawer-handle').on('click', function () {
        if (drift.sidebar.drawerRef.hasClass('dt-drawer')) {
            drift.sidebar.toggle();
        }
        $(this).toggleClass('active');
    });

    /* toggle-button */
    // var $toggleBtn = $('.toggle-button');
    if ($('.toggle-button').length > 0) {
        $('.toggle-button').on('click', function (event) {
            event.preventDefault();
            event.stopPropagation();
            $(this).toggleClass('active');
        });
    }

    /* Sidebar */
    // var $sidebar = $('.dt-sidebar');

    $('.dt-sidebar').hover(function () {
        if ($('body').hasClass('dt-sidebar--folded')) {
            $('body').addClass('dt-sidebar--expended');
        }
    }, function () {
        if ($('body').hasClass('dt-sidebar--folded')) {
            $('body').removeClass('dt-sidebar--expended');
        }
    });
    /* /Sidebar */

    /*Popover*/
    $('[data-toggle="popover"]').popover();

    /*Tooltip*/
    $('[data-toggle="tooltip"]').tooltip();

    /*Scroll Spy*/
    $('.scrollspy-horizontal').scrollspy({target: '#scrollspy-horizontal'});

    $('.scrollspy-vertical').scrollspy({target: '#scrollspy-vertical'});

    $('.scrollspy-list-group').scrollspy({target: '#scrollspy-list-group'});

    // Displaying user info card on contact hover
    var $mailContacts = $('.contacts-list .dt-contact');
    var $userInfoCard = $('.user-info-card');

    $userInfoCard.hover(function () {
        $userInfoCard.addClass('active').show();
    }, function () {
        $userInfoCard.hide().removeClass('active');
    });

    $mailContacts.each(function (index) {
        var $contact = $(this);

        $contact.hover(function (event) {
            var contactWidth = $contact.outerWidth(true);
            var positionValue = $contact.offset();
            var bodyHeight = $('body').outerHeight(true);
            var bodyWidth = $('body').outerWidth(true);

            if (bodyWidth > 767) {
                var userPic = $('.dt-avatar', $contact).attr('src');
                var userName = $('.dt-contact__title', $contact).text();

                if (userPic) {
                    $('.profile-placeholder', $userInfoCard).hide();
                    $('.profile-pic', $userInfoCard).attr('src', userPic).show();
                } else {
                    $('.profile-pic', $userInfoCard).hide();
                    $('.profile-placeholder', $userInfoCard).text(userName.substring(0, 2)).show();
                }

                $('.dt-avatar-name', $userInfoCard).text(userName);

                var infoCardHeight = $userInfoCard.outerHeight(true);
                var offsetTop = positionValue.top;
                if (bodyHeight < (positionValue.top + infoCardHeight + 20)) {
                    offsetTop = (bodyHeight - infoCardHeight - 20)
                }

                $userInfoCard.css({
                    top: offsetTop,
                    left: (positionValue.left + contactWidth - 15)
                }).show();
            }
        }, function (event) {
            if (!$userInfoCard.hasClass('active')) {
                $userInfoCard.hide();
            }
        });
    });

    $.fn.serializeFiles = function () {
        var form = $(this),
        formData = new FormData()
        formParams = form.serializeArray();

        $.each(form.find('input[type="file"]'), function (i, tag) {
            $.each($(tag)[0].files, function (i, file) {
                formData.append(tag.name, file);
            });
        });

        $.each(formParams, function (i, val) {
            formData.append(val.name, val.value);
        });

        return formData;
    };

});
// (jQuery);

$(document).ready(function () {
    $('table').on('draw.dt', function() {
        if($().popover()){
            $('[data-toggle="popover"]').popover();
        }
      });
    
      $(document).on('shown.bs.dropdown', '.table-responsive', function (e) {
        // The .dropdown container
        var $container = $(e.target);
    
        // Find the actual .dropdown-menu
        var $dropdown = $container.find('.dropdown-menu');
        if ($dropdown.length) {
            // Save a reference to it, so we can find it after we've attached it to the body
            $container.data('dropdown-menu', $dropdown);
        } else {
            $dropdown = $container.data('dropdown-menu');
        }
    
        $dropdown.css('top', ($container.offset().top + $container.outerHeight()) + 'px');
        $dropdown.css('left', $container.offset().left + 'px');
        $dropdown.css('position', 'absolute');
        $dropdown.css('display', 'block');
        $dropdown.appendTo('body');
      });
    
      $(document).on('hide.bs.dropdown', '.table-responsive', function (e) {
          // Hide the dropdown menu bound to this button
          $(e.target).data('dropdown-menu').css('display', 'none');
      });
    
      $(document).on('hidden.bs.modal', '.table-responsive', function (e) {
          // Hide the dropdown menu bound to this button
          $(e.target).data('dropdown-menu').css('display', 'none');
      });

});
